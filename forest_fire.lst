   1 0000               #
   2 0000               # @author: Brendan Kapp (bek7883)
   3 0000               #
   4 0000               # This is forestfire main program and is responsible for the main loop
   5 0000               # of the project, it involves calling all the nessicary functions that
   6 0000               # manage the main state of the simulation.
   7 0000               
   8 0000               #
   9 0000               # CONSTANTS
  10 0000               #
  11 0000               
  12 0000               PRINT_STRING = 4
  13 0000               READ_INT = 5
  14 0000               PRINT_INT = 1
  15 0000               
  16 0000               #
  17 0000               # DATA
  18 0000               #
  19 0000               
  20 0000               	.data
  21 0000               input_failed_text:
  22 0000 496E7075		.asciiz	"Input failed\n"
          74206661
          696C6564
          0A00    
  23 000e               input_success_text:
  24 000e 496E7075		.asciiz "Input passed\n"
          74207061
          73736564
          0A00    
  25 001c               newline:
  26 001c 0A00    		.asciiz "\n"
  27 001e               
  28 001e               #
  29 001e               # CODE
  30 001e               #
  31 0000               	.text
  32 0000               	.align	2
  33 0000               
  34 0000               	.globl	main
  35 0000               	.globl	input
  36 0000               	.globl	output
  37 0000               	.globl	grid_create
  38 0000               	.globl	grid_cycle
  39 0000               	.globl	print_banner
  40 0000               	.globl	print_grid
  41 0000               
  42 0000               main:
  43 0000 23BDFFE0		addi	$sp, $sp, -32
  44 0004 AFBF001C		sw	$ra, 28($sp)
  45 0008 AFB70018		sw	$s7, 24($sp)
  46 000c AFB60014		sw	$s6, 20($sp)
  47 0010 AFB50010		sw	$s5, 16($sp)
  48 0014 AFB4000C		sw	$s4, 12($sp)
  49 0018 AFB30008		sw	$s3, 8($sp)
  50 001c AFB20004		sw	$s2, 4($sp)
  51 0020 AFB10000		sw	$s1, 0($sp)
  52 0024 0C000000		jal	input
  53 0028 2408FFFF		li	$t0, -1
  54 002c 14480005		bne	$v0, $t0, input_success		# check if the return given
  55 0030               						#  is -1 (fail) or success 		
  56 0030               input_failed:
  57 0030 34020004		li	$v0, PRINT_STRING
  58 0034 3C040000		la	$a0, input_failed_text
     0038 34840000
  59 003c 0000000C		syscall
  60 0040 0800002C		j	main_done
  61 0044               input_success:
  62 0044 00404821		move	$t1, $v0			# print success message
  63 0048 34020004		li	$v0, PRINT_STRING
  64 004c 3C040000		la	$a0, input_success_text
     0050 34840000
  65 0054 0000000C		syscall
  66 0058               
  67 0058 34020001		li	$v0, PRINT_INT			# print address
  68 005c 01202021		move	$a0, $t1
  69 0060 0000000C		syscall
  70 0064               	
  71 0064 34020004		li	$v0, PRINT_STRING
  72 0068 3C040000		la	$a0, newline
     006c 34840000
  73 0070 0000000C		syscall
  74 0074               main_loop_start:
  75 0074 0C000000		jal	grid_create			# create the grid
  76 0078 0040B821		move	$s7, $v0			# grid address
  77 007c 34100000		li	$s0, 0 				# generations counter
  78 0080 8D310000		lw	$s1, 0($t1)			# size
  79 0084 8D320004		lw	$s2, 4($t1)			# generations
  80 0088 8D330008		lw	$s3, 8($t1)			# wind
  81 008c 0C000000		jal	print_banner
  82 0090               main_loop:
  83 0090               	# print
  84 0090 02E02021		move	$a0, $s7
  85 0094 02002821		move	$a1, $s0
  86 0098 02203021		move	$a2, $s1
  87 009c 0C000000		jal	print_grid
  88 00a0               	# increment
  89 00a0 22100001		addi	$s0, $s0, 1
  90 00a4               	# apple rule 1
  91 00a4               	# apply rule 2
  92 00a4               	# apply rule 3
  93 00a4               	# copy generation
  94 00a4 0C000000		jal	grid_cycle	
  95 00a8               	# loop
  96 00a8 12120001		beq	$s0, $s2, main_done
  97 00ac 08000024		j	main_loop
  98 00b0               	
  99 00b0               main_done:
 100 00b0 8FB10000		lw	$s1, 0($sp)
 101 00b4 8FB20004		lw	$s2, 4($sp)
 102 00b8 8FB30008		lw	$s3, 8($sp)
 103 00bc 8FB4000C		lw	$s4, 12($sp)
 104 00c0 8FB50010		lw	$s5, 16($sp)
 105 00c4 8FB60014		lw	$s6, 20($sp)
 106 00c8 8FB70018		lw	$s7, 24($sp)
 107 00cc 8FBF001C		lw	$ra, 28($sp)
 108 00d0 23BD0020		addi	$sp, $sp, 32
 109 00d4 03E00008		jr	$ra


PRINT_INT           = 00000001   
PRINT_STRING        = 00000004   
READ_INT            = 00000005   
grid_create           ******** XG
grid_cycle            ******** XG
input                 ******** XG
input_failed          00000030 R  text 
input_failed_text     00000000 R  data 
input_success         00000044 R  text 
input_success_text    0000000E R  data 
main                  00000000 RG text 
main_done             000000B0 R  text 
main_loop             00000090 R  text 
main_loop_start       00000074 R  text 
newline               0000001C R  data 
output                ******** XG
print_banner          ******** XG
print_grid            ******** XG
