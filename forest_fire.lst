   1 0000               #
   2 0000               # @author: Brendan Kapp (bek7883)
   3 0000               #
   4 0000               # This is forestfire main program and is responsible for the main loop
   5 0000               # of the project, it involves calling all the nessicary functions that
   6 0000               # manage the main state of the simulation.
   7 0000               
   8 0000               #
   9 0000               # CONSTANTS
  10 0000               #
  11 0000               
  12 0000               PRINT_STRING = 4
  13 0000               READ_INT = 5
  14 0000               PRINT_INT = 1
  15 0000               
  16 0000               #
  17 0000               # DATA
  18 0000               #
  19 0000               
  20 0000               	.data
  21 0000               input_failed_text:
  22 0000 496E7075		.asciiz	"Input failed\n"
          74206661
          696C6564
          0A00    
  23 000e               input_success_text:
  24 000e 496E7075		.asciiz "Input passed\n"
          74207061
          73736564
          0A00    
  25 001c               newline:
  26 001c 0A00    		.asciiz "\n"
  27 001e               
  28 001e               #
  29 001e               # CODE
  30 001e               #
  31 0000               	.text
  32 0000               	.align	2
  33 0000               
  34 0000               	.globl	main
  35 0000               	.globl	input
  36 0000               	.globl	output
  37 0000               
  38 0000               main:
  39 0000 23BDFFF4		addi	$sp, $sp, -12
  40 0004 AFBF0008		sw	$ra, 8($sp)
  41 0008 AFB20004		sw	$s2, 4($sp)
  42 000c AFB10000		sw	$s1, 0($sp)
  43 0010 0C000000		jal	input
  44 0014 2408FFFF		li	$t0, -1
  45 0018 14480005		bne	$v0, $t0, input_success		# check if the return given
  46 001c               						#  is -1 (fail) or success 		
  47 001c               input_failed:
  48 001c 34020004		li	$v0, PRINT_STRING
  49 0020 3C040000		la	$a0, input_failed_text
     0024 34840000
  50 0028 0000000C		syscall
  51 002c 08000018		j	main_done
  52 0030               input_success:
  53 0030 00404821		move	$t1, $v0			# print success message
  54 0034 34020004		li	$v0, PRINT_STRING
  55 0038 3C040000		la	$a0, input_success_text
     003c 34840000
  56 0040 0000000C		syscall
  57 0044               
  58 0044 34020001		li	$v0, PRINT_INT			# print address
  59 0048 01202021		move	$a0, $t1
  60 004c 0000000C		syscall
  61 0050               	
  62 0050 34020004		li	$v0, PRINT_STRING
  63 0054 3C040000		la	$a0, newline
     0058 34840000
  64 005c 0000000C		syscall
  65 0060               
  66 0060               main_done:
  67 0060 8FB10000		lw	$s1, 0($sp)
  68 0064 8FB20004		lw	$s2, 4($sp)
  69 0068 8FBF0008		lw	$ra, 8($sp)
  70 006c 23BD000C		addi	$sp, $sp, 12
  71 0070 03E00008		jr	$ra


PRINT_INT           = 00000001   
PRINT_STRING        = 00000004   
READ_INT            = 00000005   
input                 ******** XG
input_failed          0000001C R  text 
input_failed_text     00000000 R  data 
input_success         00000030 R  text 
input_success_text    0000000E R  data 
main                  00000000 RG text 
main_done             00000060 R  text 
newline               0000001C R  data 
output                ******** XG
