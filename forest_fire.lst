   1 0000               #
   2 0000               # @author: Brendan Kapp (bek7883)
   3 0000               #
   4 0000               # This is forestfire main program and is responsible for the main loop
   5 0000               # of the project, it involves calling all the nessicary functions that
   6 0000               # manage the main state of the simulation.
   7 0000               
   8 0000               #
   9 0000               # CONSTANTS
  10 0000               #
  11 0000               
  12 0000               PRINT_STRING = 4
  13 0000               READ_INT = 5
  14 0000               PRINT_INT = 1
  15 0000               
  16 0000               #
  17 0000               # DATA
  18 0000               #
  19 0000               
  20 0000               	.data
  21 0000               input_failed_text:
  22 0000 496E7075		.asciiz	"Input failed\n"
          74206661
          696C6564
          0A00    
  23 000e               input_success_text:
  24 000e 496E7075		.asciiz "Input passed\n"
          74207061
          73736564
          0A00    
  25 001c               newline:
  26 001c 0A00    		.asciiz "\n"
  27 001e               
  28 001e               #
  29 001e               # CODE
  30 001e               #
  31 0000               	.text
  32 0000               	.align	2
  33 0000               
  34 0000               	.globl	main
  35 0000               	.globl	input
  36 0000               	.globl	output
  37 0000               	.globl	grid_create
  38 0000               	.globl	grid_cycle
  39 0000               	.globl	print_banner
  40 0000               	.globl	print_grid
  41 0000               
  42 0000               main:
  43 0000 23BDFFE0		addi	$sp, $sp, -32
  44 0004 AFBF001C		sw	$ra, 28($sp)
  45 0008 AFB70018		sw	$s7, 24($sp)
  46 000c AFB60014		sw	$s6, 20($sp)
  47 0010 AFB50010		sw	$s5, 16($sp)
  48 0014 AFB4000C		sw	$s4, 12($sp)
  49 0018 AFB30008		sw	$s3, 8($sp)
  50 001c AFB20004		sw	$s2, 4($sp)
  51 0020 AFB10000		sw	$s1, 0($sp)
  52 0024               
  53 0024 0C000000		jal	input
  54 0028 2408FFFF		li	$t0, -1
  55 002c 1448000C		bne	$v0, $t0, input_success		# check if the return given
  56 0030               						#  is -1 (fail) or success 		
  57 0030               input_failed:
  58 0030 34020004		li	$v0, PRINT_STRING
  59 0034 3C040000		la	$a0, input_failed_text
     0038 34840000
  60 003c 0000000C		syscall
  61 0040               
  62 0040 34020001		li	$v0, PRINT_INT
  63 0044 00602021		move	$a0, $v1
  64 0048 0000000C		syscall
  65 004c               	
  66 004c 34020004		li	$v0, PRINT_STRING
  67 0050 3C040000		la	$a0, newline
     0054 34840000
  68 0058 0000000C		syscall
  69 005c 08000033		j	main_done
  70 0060               input_success:
  71 0060 00404821		move	$t1, $v0			# print success message
  72 0064 34020004		li	$v0, PRINT_STRING
  73 0068 3C040000		la	$a0, input_success_text
     006c 34840000
  74 0070 0000000C		syscall
  75 0074               
  76 0074 34020001		li	$v0, PRINT_INT			# print address
  77 0078 01202021		move	$a0, $t1
  78 007c 0000000C		syscall
  79 0080               	
  80 0080 34020004		li	$v0, PRINT_STRING
  81 0084 3C040000		la	$a0, newline
     0088 34840000
  82 008c 0000000C		syscall
  83 0090               main_loop_start:
  84 0090 0C000000		jal	grid_create			# create the grid
  85 0094 0040B821		move	$s7, $v0			# grid address
  86 0098 34100000		li	$s0, 0 				# generations counter
  87 009c 8D310000		lw	$s1, 0($t1)			# size
  88 00a0 8D320004		lw	$s2, 4($t1)			# generations
  89 00a4 8D330008		lw	$s3, 8($t1)			# wind
  90 00a8 0C000000		jal	print_banner
  91 00ac               main_loop:
  92 00ac               	# print
  93 00ac 02E02021		move	$a0, $s7
  94 00b0 02002821		move	$a1, $s0
  95 00b4 02203021		move	$a2, $s1
  96 00b8 0C000000		jal	print_grid
  97 00bc               	# increment
  98 00bc 22100001		addi	$s0, $s0, 1
  99 00c0               	# apple rule 1
 100 00c0               	# apply rule 2
 101 00c0               	# apply rule 3
 102 00c0               	# copy generation
 103 00c0 0C000000		jal	grid_cycle	
 104 00c4               	# loop
 105 00c4 12120001		beq	$s0, $s2, main_done
 106 00c8 0800002B		j	main_loop
 107 00cc               	
 108 00cc               main_done:
 109 00cc 8FB10000		lw	$s1, 0($sp)
 110 00d0 8FB20004		lw	$s2, 4($sp)
 111 00d4 8FB30008		lw	$s3, 8($sp)
 112 00d8 8FB4000C		lw	$s4, 12($sp)
 113 00dc 8FB50010		lw	$s5, 16($sp)
 114 00e0 8FB60014		lw	$s6, 20($sp)
 115 00e4 8FB70018		lw	$s7, 24($sp)
 116 00e8 8FBF001C		lw	$ra, 28($sp)
 117 00ec 23BD0020		addi	$sp, $sp, 32
 118 00f0 03E00008		jr	$ra


PRINT_INT           = 00000001   
PRINT_STRING        = 00000004   
READ_INT            = 00000005   
grid_create           ******** XG
grid_cycle            ******** XG
input                 ******** XG
input_failed          00000030 R  text 
input_failed_text     00000000 R  data 
input_success         00000060 R  text 
input_success_text    0000000E R  data 
main                  00000000 RG text 
main_done             000000CC R  text 
main_loop             000000AC R  text 
main_loop_start       00000090 R  text 
newline               0000001C R  data 
output                ******** XG
print_banner          ******** XG
print_grid            ******** XG
