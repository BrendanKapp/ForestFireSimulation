   1 0000               #
   2 0000               # @author Brendan Kapp
   3 0000               # this routine will perform the basic rules of the simulation
   4 0000               #
   5 0000               
   6 0000               	.text
   7 0000               	.align	2
   8 0000               	.globl	setup_rules
   9 0000               	.globl	rule_1
  10 0000               	.globl	rule_2
  11 0000               	.globl	rule_3
  12 0000               	.globl	grid_get_old
  13 0000               	.globl	grid_set
  14 0000               grid_location:
  15 0000 00000000		.word	0, 0		# grid, old grid
     0004 00000000
  16 0008               
  17 0008               #
  18 0008               # setup_rules sets up the grid addresses for the rules to use
  19 0008               # parameters: a0 (grid), a1 (old grid)
  20 0008               # returns: none
  21 0008               #
  22 0008               setup_rules:
  23 0008 3C080000		la	$t0, grid_location
     000c 35080000
  24 0010 AD040000		sw	$a0, 0($t0)
  25 0014 AD250004		sw	$a1, 4($t1)
  26 0018 03E00008		jr	$ra
  27 001c               get_grid:
  28 001c 3C080000		la	$t0, grid_location
     0020 35080000
  29 0024 8D020000		lw	$v0, 0($t0)
  30 0028 03E00008		jr	$ra
  31 002c               get_old_grid:
  32 002c 3C080000		la	$t0, grid_location
     0030 35080000
  33 0034 8D020004		lw	$v0, 4($t0)
  34 0038 03E00008		jr	$ra
  35 003c               #
  36 003c               # rule_1 applies the first rule to the grid location (x, y)
  37 003c               # a burning cell from the previous generation turns into an empty grass
  38 003c               # cell in the current generation
  39 003c               # parameters: a0 (x), a1 (y)
  40 003c               # returns: none
  41 003c               #
  42 003c               rule_1:
  43 003c 23BDFFEC		addi	$sp, $sp, -20
  44 0040 AFBF0010		sw	$ra, 16($sp)
  45 0044 AFB3000C		sw	$s3, 12($sp)
  46 0048 AFB20008		sw	$s2, 8($sp)
  47 004c AFB10004		sw	$s1, 4($sp)
  48 0050 AFB00000		sw	$s0, 0($sp)
  49 0054               
  50 0054 0C000000		jal	grid_get_old
  51 0058 34090003		li	$t1, 3
  52 005c 14490002		bne	$v0, $t1, rule_1_end
  53 0060               						# set to grass
  54 0060 34060001		li	$a2, 1
  55 0064 0C000000		jal	grid_set
  56 0068               rule_1_end:
  57 0068 8FB00000		lw	$s0, 0($sp)
  58 006c 8FB10004		lw	$s1, 4($sp)
  59 0070 8FB20008		lw	$s2, 8($sp)
  60 0074 8FB3000C		lw	$s3, 12($sp)
  61 0078 8FBF0010		lw	$ra, 16($sp)
  62 007c 23BD0014		addi	$sp, $sp, 20	
  63 0080 03E00008		jr	$ra
  64 0084               
  65 0084               #
  66 0084               # rule_2 applies the second rule to the grid location (x, y)
  67 0084               # a tree in the previous generation will burn if at least one
  68 0084               # of its cardinal direction neighbors in the previous generation
  69 0084               # is burning, otherwise it will stay a tree
  70 0084               # paramters: a0 (x), a1 (y), a2 (grid size)
  71 0084               # returns: none
  72 0084               # 
  73 0084               rule_2:
  74 0084 23BDFFEC		addi	$sp, $sp, -20
  75 0088 AFBF0010		sw	$ra, 16($sp)
  76 008c AFB3000C		sw	$s3, 12($sp)
  77 0090 AFB20008		sw	$s2, 8($sp)
  78 0094 AFB10004		sw	$s1, 4($sp)
  79 0098 AFB00000		sw	$s0, 0($sp)
  80 009c               	
  81 009c 00808021		move	$s0, $a0
  82 00a0 00A08821		move	$s1, $a1
  83 00a4 00C09021		move	$s2, $a2
  84 00a8               
  85 00a8 0C000000		jal	grid_get_old
  86 00ac 34090002		li	$t1, 2
  87 00b0 14490027		bne	$v0, $t1, rule_2_end
  88 00b4               #
  89 00b4               # check above
  90 00b4               #
  91 00b4 2088FFFF		addi	$t0, $a0, -1
  92 00b8 0100482A		slt	$t1, $t0, $zero			# 1 = val is neg, we skip
  93 00bc 15200005		bne	$t1, $zero, check_below
  94 00c0               #
  95 00c0               # check if x - 1 is burning
  96 00c0               #
  97 00c0 01002021		move	$a0, $t0
  98 00c4 02202821		move	$a1, $s1
  99 00c8 0C000000		jal	grid_get_old
 100 00cc 34090003		li	$t1, 3
 101 00d0 1049001B		beq	$v0, $t1, rule_2_burn
 102 00d4               check_below:
 103 00d4 224AFFFF		addi	$t2, $s2, -1			# grid boundary
 104 00d8 22080001		addi	$t0, $s0, 1
 105 00dc 0148482A		slt	$t1, $t2, $t0			# 1 = val is to large, skip
 106 00e0 15200005		bne	$t1, $zero, check_after	
 107 00e4               #	
 108 00e4               # check if x + 1 is burning
 109 00e4               #
 110 00e4 01002021		move	$a0, $t0
 111 00e8 02202821		move	$a1, $s1
 112 00ec 0C000000		jal	grid_get_old
 113 00f0 34090003		li	$t1, 3
 114 00f4 10490012		beq	$v0, $t1, rule_2_burn
 115 00f8               	
 116 00f8               check_after:
 117 00f8 224AFFFF		addi	$t2, $s2, -1			# grid boundary
 118 00fc 22290001		addi	$t1, $s1, 1
 119 0100 0149402A		slt	$t0, $t2, $t1			# 1 = val is to large, skip
 120 0104 15000005		bne	$t0, $zero, check_before
 121 0108               #
 122 0108               # check if y + 1 is burning
 123 0108               #
 124 0108 02002021		move	$a0, $s0
 125 010c 01202821		move	$a1, $t1
 126 0110 0C000000		jal	grid_get_old
 127 0114 34090003		li	$t1, 3
 128 0118 10490009		beq	$v0, $t1, rule_2_burn
 129 011c               check_before:
 130 011c 2229FFFF		addi	$t1, $s1, -1
 131 0120 0220402A		slt	$t0, $s1, $zero			# 1 = val is neg, we skip
 132 0124 1500000A		bne	$t0, $zero, rule_2_end
 133 0128               #
 134 0128               # check if y - 1 is burning
 135 0128               #
 136 0128 02002021		move	$a0, $s0
 137 012c 01202821		move	$a1, $t1
 138 0130 0C000000		jal	grid_get_old
 139 0134 34090003		li	$t1, 3
 140 0138 10490001		beq	$v0, $t1, rule_2_burn	
 141 013c 08000054		j	rule_2_end
 142 0140               rule_2_burn:
 143 0140 02002021		move	$a0, $s0
 144 0144 02202821		move	$a1, $s1
 145 0148 34060003		li	$a2, 3
 146 014c 0C000000		jal	grid_set
 147 0150               rule_2_end:
 148 0150 8FB00000		lw	$s0, 0($sp)
 149 0154 8FB10004		lw	$s1, 4($sp)
 150 0158 8FB20008		lw	$s2, 8($sp)
 151 015c 8FB3000C		lw	$s3, 12($sp)
 152 0160 8FBF0010		lw	$ra, 16($sp)
 153 0164 23BD0014		addi	$sp, $sp, 20	
 154 0168 03E00008		jr	$ra
 155 016c               
 156 016c               #
 157 016c               # rule_3 applies the third rule to the grid location (x, y)
 158 016c               # a previous generation tree will turn an adjacent empty
 159 016c               # grass cell into a current generation tree if that
 160 016c               # empty cell is in the given wind direction
 161 016c               # parameters: a0 (x), a1 (y), a2 (grid size), a3 (wind direction)
 162 016c               # returns: none
 163 016c               #
 164 016c               rule_3:
 165 016c 23BDFFEC		addi	$sp, $sp, -20
 166 0170 AFBF0010		sw	$ra, 16($sp)
 167 0174 AFB3000C		sw	$s3, 12($sp)
 168 0178 AFB20008		sw	$s2, 8($sp)
 169 017c AFB10004		sw	$s1, 4($sp)
 170 0180 AFB00000		sw	$s0, 0($sp)
 171 0184               
 172 0184 00808021		move	$s0, $a0
 173 0188 00A08821		move	$s1, $a1
 174 018c 00C09021		move	$s2, $a2
 175 0190 00E09821		move	$s3, $a3
 176 0194               	
 177 0194 0C000000		jal	grid_get_old
 178 0198 34090002		li	$t1, 2
 179 019c 14490031		bne	$v0, $t1, rule_3_end
 180 01a0               #
 181 01a0               # check wind (N, S, E, W)
 182 01a0               # (78, 83, 69, 87)
 183 01a0               #
 184 01a0 340A004E		li	$t2, 78				# North
 185 01a4 126A0024		beq	$s3, $t2, tree_before
 186 01a8 340A0053		li	$t2, 83
 187 01ac 126A0018		beq	$s3, $t2, tree_after		# South
 188 01b0 340A0045		li	$t2, 69
 189 01b4 126A000C		beq	$s3, $t2, tree_below		# East
 190 01b8 340A0057		li	$t2, 87
 191 01bc 126A0001		beq	$s3, $t2, tree_above		# West
 192 01c0 08000099		j	rule_3_end			# Error	
 193 01c4               tree_above:					# west
 194 01c4 2088FFFF		addi	$t0, $a0, -1
 195 01c8 0100482A		slt	$t1, $t0, $zero			# 1 = val is neg, we skip
 196 01cc 15200025		bne	$t1, $zero, rule_3_end
 197 01d0               #	
 198 01d0               # check if x - 1 is grass
 199 01d0               #
 200 01d0 01002021		move	$a0, $t0
 201 01d4 02202821		move	$a1, $s1
 202 01d8 0C000000		jal	grid_get_old
 203 01dc 34090001		li	$t1, 1
 204 01e0 1049001E		beq	$v0, $t1, rule_3_tree
 205 01e4 08000099		j	rule_3_end
 206 01e8               tree_below:					# east
 207 01e8 224AFFFF		addi	$t2, $s2, -1			# grid boundary
 208 01ec 22080001		addi	$t0, $s0, 1
 209 01f0 0148482A		slt	$t1, $t2, $t0			# 1 = val is to large, skip
 210 01f4 1520001B		bne	$t1, $zero, rule_3_end	
 211 01f8               #
 212 01f8               # check if x + 1 is grass
 213 01f8               #
 214 01f8 01002021		move	$a0, $t0
 215 01fc 02202821		move	$a1, $s1
 216 0200 0C000000		jal	grid_get_old
 217 0204 34090001		li	$t1, 1
 218 0208 10490014		beq	$v0, $t1, rule_3_tree
 219 020c 08000099		j	rule_3_end
 220 0210               tree_after:					# north
 221 0210 224AFFFF		addi	$t2, $s2, -1			# grid boundary
 222 0214 22290001		addi	$t1, $s1, 1
 223 0218 0149402A		slt	$t0, $t2, $t1			# 1 = val is to large, skip
 224 021c 15000011		bne	$t0, $zero, rule_3_end
 225 0220               #
 226 0220               # check if y + 1 is grass
 227 0220               #
 228 0220 02002021		move	$a0, $s0
 229 0224 01202821		move	$a1, $t1
 230 0228 0C000000		jal	grid_get_old
 231 022c 34090001		li	$t1, 1
 232 0230 1049000A		beq	$v0, $t1, rule_3_tree
 233 0234 08000099		j	rule_3_end
 234 0238               tree_before:					# south
 235 0238 2229FFFF		addi	$t1, $s1, -1
 236 023c 0220402A		slt	$t0, $s1, $zero			# 1 = val is neg, we skip
 237 0240 15000008		bne	$t0, $zero, rule_3_end
 238 0244               #
 239 0244               # check if y - 1 is grass
 240 0244               #
 241 0244 02002021		move	$a0, $s0
 242 0248 01202821		move	$a1, $t1
 243 024c 0C000000		jal	grid_get_old
 244 0250 34090001		li	$t1, 1
 245 0254 10490001		beq	$v0, $t1, rule_3_tree
 246 0258 08000099		j	rule_3_end
 247 025c               rule_3_tree:
 248 025c 34060002		li	$a2, 2
 249 0260 0C000000		jal	grid_set
 250 0264               
 251 0264               rule_3_end:
 252 0264 8FB00000		lw	$s0, 0($sp)
 253 0268 8FB10004		lw	$s1, 4($sp)
 254 026c 8FB20008		lw	$s2, 8($sp)
 255 0270 8FB3000C		lw	$s3, 12($sp)
 256 0274 8FBF0010		lw	$ra, 16($sp)
 257 0278 23BD0014		addi	$sp, $sp, 20	
 258 027c 03E00008		jr	$ra
 259 0280               


check_after      000000F8 R  text 
check_before     0000011C R  text 
check_below      000000D4 R  text 
get_grid         0000001C R  text 
get_old_grid     0000002C R  text 
grid_get_old     ******** XG
grid_location    00000000 R  text 
grid_set         ******** XG
rule_1           0000003C RG text 
rule_1_end       00000068 R  text 
rule_2           00000084 RG text 
rule_2_burn      00000140 R  text 
rule_2_end       00000150 R  text 
rule_3           0000016C RG text 
rule_3_end       00000264 R  text 
rule_3_tree      0000025C R  text 
setup_rules      00000008 RG text 
tree_above       000001C4 R  text 
tree_after       00000210 R  text 
tree_before      00000238 R  text 
tree_below       000001E8 R  text 
